function cn = gaussian_quadr_weights_ref(n)
cn = zeros(1, n+1);
if n == 0;
cn(1) = 2;
elseif n == 1;
cn(1) = 1; cn(2) = 1;
elseif n == 2
cn(1) = 5/9; cn(2) = 8/9; cn(3) = 5/9;
elseif n == 3
    cn(1) = 0.3478548451374538; 
    cn(2) = 0.6521451548625461; 
    cn(3) = cn(2); cn(4) = cn(1);
elseif n == 4
    cn(1) = 0.2369268850561891; 
    cn(2) = 0.4786286704993665; 
    cn(3) = 0.5688888888888889;
    cn(4) = cn(2); cn(5) = cn(1);
elseif n == 5
    cn(1) = 0.1713244923791704; 
    cn(2) = 0.3607615730481386; 
    cn(3) = 0.4679139345726910;
    cn(4) = cn(3); cn(5) = cn(2); cn(6) = cn(1);
    cn=cn*5/288;
elseif n == 6
    cn(1) = 0.1294849661688697; 
    cn(2) = 0.2797053914892766; 
    cn(3) = 0.3818300505051189; 
    cn(4) = 0.4179591836734694;
    cn(5) = cn(3); cn(6) = cn(2); cn(7) = cn(1);
elseif n == 7
    cn(1) = 0.1012285362903763; 
    cn(2) = 0.2223810344533745; 
    cn(3) = 0.3137066458778873; 
    cn(4) = 0.3626837833783620;
    cn(5) = cn(4); cn(6) = cn(3); cn(7) = cn(2); cn(5) = cn(1);
elseif n == 8
    cn(1) = 0.0812743883615744; 
    cn(2) = 0.1806481606948574; 
    cn(3) = 0.2606106964029354; 
    cn(4) = 0.3123470770400029; 
    cn(5) = 0.3302393550012598;
    cn(6) = cn(4); cn(7) = cn(3); cn(8) = cn(2); cn(9) = cn(1);
elseif n == 9
    cn(1) = 0.0666713443086881; 
    cn(2) = 0.1494513491505806; 
    cn(3) = 0.2190863625159820; 
    cn(4) = 0.2692667193099963; 
    cn(5) = 0.2955242247147529;
    cn(6) = cn(5); cn(7) = cn(4); cn(8) = cn(3); cn(9) = cn(2); cn(10) = cn(1);
elseif n == 10
    cn(1) = 0.0556685671161737; 
    cn(2) = 0.1255803694649046; 
    cn(3) = 0.1862902109277343; 
    cn(4) = 0.2331937645919905; 
    cn(5) = 0.2628045445102467; 
    cn(6) = 0.2729250867779006;
    cn(7) = cn(5); cn(8) = cn(4); cn(9) = cn(3); cn(10) = cn(2); cn(11) = cn(1);
end
end